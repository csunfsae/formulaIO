{"version":3,"sources":["../src/series_overrides_diagram_ctrl.js"],"names":["angular","module","controller","$scope","$element","popoverSrv","overrideMenu","currentOverrides","override","addOverrideOption","name","propertyName","values","option","text","index","length","submenu","_","map","value","String","push","setOverride","item","subItem","openColorSelector","updateCurrentOverrides","ctrl","render","colorSelected","color","thresholdsChanged","thresholds","unitFormatChanged","refresh","decimalsChanged","show","element","find","position","openOn","template","model","autoClose","onClose","removeOverride","getSeriesNames","series","alias","each","isUndefined"],"mappings":"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","file":"series_overrides_diagram_ctrl.js","sourcesContent":["  angular.module('grafana.controllers').controller('SeriesOverridesDiagramCtrl', ['$scope', '$element', 'popoverSrv', function($scope, $element, popoverSrv) {\n    $scope.overrideMenu = [];\n    $scope.currentOverrides = [];\n    $scope.override = $scope.override || {};\n\n    $scope.addOverrideOption = function(name, propertyName, values) {\n      var option = {};\n      option.text = name;\n      option.propertyName = propertyName;\n      option.index = $scope.overrideMenu.length;\n      option.values = values;\n      option.submenu = _.map(values, function(value) {\n        return { text: String(value), value: value };\n      });\n\n      $scope.overrideMenu.push(option);\n    };\n\n    $scope.setOverride = function(item, subItem) {\n      // handle color overrides\n      if (item.propertyName === 'color') {\n        $scope.openColorSelector();\n        return;\n      }\n\n      $scope.override[item.propertyName] = subItem.value;\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.render();\n    };\n\n    $scope.colorSelected = function(color) {\n      $scope.override['color'] = color;\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.render();\n    };\n\n    $scope.thresholdsChanged = function(thresholds){\n    \t$scope.override['thresholds'] = thresholds.value;\n    \t$scope.updateCurrentOverrides();\n    \t$scope.ctrl.render();\n    };\n\n    $scope.unitFormatChanged = function(option){\n    \t$scope.override['unitFormat'] = option.value;\n    \t$scope.updateCurrentOverrides();\n    \t$scope.ctrl.refresh();\n    };\n\n    $scope.decimalsChanged = function(option){\n      $scope.override['decimals'] = option.value;\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.refresh();\n    };\n\n    $scope.openColorSelector = function() {\n      popoverSrv.show({\n        element: $element.find(\".dropdown\")[0],\n        position: 'top center',\n        openOn: 'click',\n        template: '<gf-color-picker></gf-color-picker>',\n        model: {\n          autoClose: true,\n          colorSelected: $scope.colorSelected,\n        },\n        onClose: function() {\n          $scope.ctrl.render();\n        }\n      });\n    };\n\n    $scope.removeOverride = function(option) {\n      delete $scope.override[option.propertyName];\n      $scope.updateCurrentOverrides();\n      $scope.ctrl.refresh();\n    };\n\n    $scope.getSeriesNames = function() {\n      return _.map($scope.ctrl.series, function(series) {\n        return series.alias;\n      });\n    };\n\n    $scope.updateCurrentOverrides = function() {\n      $scope.currentOverrides = [];\n      _.each($scope.overrideMenu, function(option) {\n        var value = $scope.override[option.propertyName];\n        if (_.isUndefined(value)) { return; }\n        $scope.currentOverrides.push({\n          name: option.text,\n          propertyName: option.propertyName,\n          value: String(value)\n        });\n      });\n    };\n\n    //$scope.addOverrideOption('Color', 'color', ['change']);\n    $scope.addOverrideOption('Thresholds', 'thresholds', ['custom']);\n    $scope.addOverrideOption('Colors', 'invertColors', ['Invert Colors']);\n    $scope.addOverrideOption('Value', 'valueName', ['avg', 'min', 'max', 'total', 'current']);\n    $scope.addOverrideOption('Decimals', 'decimals', [2]);\n    $scope.addOverrideOption('Unit Format', 'unitFormat', ['select']);\n    $scope.updateCurrentOverrides();\n  }]);\n"]}