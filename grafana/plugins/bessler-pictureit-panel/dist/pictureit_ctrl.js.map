{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["_","MetricsPanelCtrl","panelDefaults","valueMaps","seriesList","series","bgimage","sensors","height","width","PictureItCtrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","render","onDataReceived","dataList","dataListLength","length","push","name","target","value","datapoints","index","splice","xlocation","ylocation","format","bgcolor","color","size","bordercolor","visible","lastSensor","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","pixelStrToNum","str","parseInt","substr","css","sensorsLength","valueMapsLength","sensor","ylocationStr","toString","xlocationStr","sizeStr","valueMap","valueFormatted","sprintf","renderingCompleted","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport './sprintf.js';\nimport './angular-sprintf.js';\n\nconst panelDefaults = {\n\tvalueMaps: [],\n\tseriesList: [],\n\tseries: [],\n\tbgimage: '',\n\tsensors: [],\n\theight: '400px',\n\twidth: '100px'\n};\n\nexport class PictureItCtrl extends MetricsPanelCtrl  {\n  \n  \n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\tthis.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n  }\n\n  onDataReceived(dataList) {\t\n\tvar dataListLength = dataList.length;\n\tthis.panel.valueMaps=[];\n\tfor (var series=0;series<dataListLength;series++) {\t\t\n\t\tthis.panel.valueMaps.push({name:dataList[series].target,value:dataList[series].datapoints[dataList[series].datapoints.length-1][0]});\n\t}\n\t\n    this.render();\n  }\n  \n  deleteSensor(index) {\n\tthis.panel.sensors.splice(index,1);\n  }\n  \n  addSensor() {\n\tif (this.panel.sensors.length==0)\n\t\tthis.panel.sensors.push({name: 'A-series', xlocation: 200,ylocation: 200,format: '%.2f',bgcolor:'rgba(0, 0, 0, 0.58)',color:'#FFFFFF',size:22, bordercolor:'rgb(251, 4, 4)',visible:true});\n\telse {\n\t\tvar lastSensor=this.panel.sensors[this.panel.sensors.length-1];\n\t\n\t\tthis.panel.sensors.push({name: lastSensor.name, xlocation: 200,ylocation: 200,format: lastSensor.format,bgcolor:lastSensor.bgcolor,color:lastSensor.color,size:lastSensor.size, bordercolor:lastSensor.bordercolor,visible:true});\n\t}\n  }\n  \n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\n  }\n\t\n  link(scope, elem, attrs, ctrl) {\n    var sensors;\n\tvar valueMaps;\n\n\tconst $panelContainer = elem.find('.panel-container');\n\n\tfunction pixelStrToNum(str) {\n\t\treturn parseInt(str.substr(0,str.length-2));\n\t}\n\t\n    function render() {\n      if (!ctrl.panel.sensors) { return; }\n\t  var width = pixelStrToNum($panelContainer.css(\"width\"));\n\t  var height = pixelStrToNum($panelContainer.css(\"height\"));\n\t  \n      sensors = ctrl.panel.sensors;\t  \n\t  valueMaps = ctrl.panel.valueMaps;\n\t  \n\t  var sensorsLength = sensors.length;\n\t  var valueMapsLength = valueMaps.length;\n\t  \n\t  for (var sensor=0;sensor<sensorsLength;sensor++) {\n\t\tsensors[sensor].visible = sensors[sensor].xlocation<width && sensors[sensor].ylocation<height;\n\t\tsensors[sensor].ylocationStr=sensors[sensor].ylocation.toString()+\"px\";\n\t\tsensors[sensor].xlocationStr=sensors[sensor].xlocation.toString()+\"px\";\n\t\tsensors[sensor].sizeStr=sensors[sensor].size.toString()+\"px\";\n\t\tfor (var valueMap=0;valueMap<valueMapsLength;valueMap++) {\t\n\t\t\tif (sensors[sensor].name==valueMaps[valueMap].name) {\n\t\t\t\tsensors[sensor].valueFormatted=sprintf(sensors[sensor].format,valueMaps[valueMap].value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t  }\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nPictureItCtrl.templateUrl = 'module.html';\n"]}